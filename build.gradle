// 빌드 시
buildscript {
	ext {
		springBootVersion = '2.7.15'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "io.spring.gradle:dependency-management-plugin:1.0.15.RELEASE"
	}
}

// 하위 모든 프로젝트 공통 세팅
subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group 'com.fishthreads'
	version '0.0.1-SNAPSHOT'

	sourceCompatibility = '11'
	targetCompatibility = '11'
	compileJava.options.encoding = 'UTF-8'

	repositories {
		mavenCentral()
	}

	// 하위 모듈에서 공통으로 사용하는 세팅 추가
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.1'
		compileOnly 'org.projectlombok:lombok'
		runtimeOnly 'com.h2database:h2'
		runtimeOnly 'com.mysql:mysql-connector-j'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.3.1'
		testImplementation 'org.springframework.security:spring-security-test'
	}

	test {
		useJUnitPlatform()
	}

	task wrapper(type: Wrapper){
		gradleVersion = '7.3.3'
	}
}

// 각 프로젝트에서만 사용하는 의존성 추가
project(':core') {
	bootJar.enabled = false
	jar.enabled = true

	dependencies {
		implementation 'com.nimbusds:content-type:2.2'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	}
}

project(':api') {
	apply plugin: 'war'
	bootWar.enabled = false
	war.enabled = true
	war.archiveFileName = "ROOT-api.war"

	dependencies {
		dependencies {
			implementation project(':core')
			implementation 'org.springframework.boot:spring-boot-starter-aop'
			implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
			implementation 'org.springframework.boot:spring-boot-starter-security'
			implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
			implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
			runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
			runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
			providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
		}
	}
}

project(':batch') {
	dependencies {
		// 컴파일시 core 모듈을 가져온다.
		compileOnly project(':core')
		implementation project(':core')
		implementation 'org.springframework.boot:spring-boot-starter-batch'
	}
}

//configurations {
//	compileOnly {
//		extendsFrom annotationProcessor
//	}
//}